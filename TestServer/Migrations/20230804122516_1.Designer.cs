// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestServer;

#nullable disable

namespace TestServer.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20230804122516_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestModels.UsedTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsTestPassed")
                        .HasColumnType("bit");

                    b.Property<string>("RightAnswers")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("TestType")
                        .HasColumnType("int");

                    b.Property<string>("UserAnswers")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UsedTests");
                });

            modelBuilder.Entity("TestModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsTestPassed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsTestPassed = true,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            IsTestPassed = false,
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 3,
                            IsTestPassed = true,
                            Name = "Vadim"
                        },
                        new
                        {
                            Id = 4,
                            IsTestPassed = false,
                            Name = "David"
                        },
                        new
                        {
                            Id = 5,
                            IsTestPassed = true,
                            Name = "Anna"
                        },
                        new
                        {
                            Id = 6,
                            IsTestPassed = false,
                            Name = "Vasya"
                        },
                        new
                        {
                            Id = 7,
                            IsTestPassed = true,
                            Name = "Ivan"
                        },
                        new
                        {
                            Id = 8,
                            IsTestPassed = false,
                            Name = "Helen"
                        },
                        new
                        {
                            Id = 9,
                            IsTestPassed = true,
                            Name = "Igor"
                        },
                        new
                        {
                            Id = 10,
                            IsTestPassed = false,
                            Name = "Jane"
                        });
                });

            modelBuilder.Entity("TestModels.UsedTest", b =>
                {
                    b.HasOne("TestModels.User", "User")
                        .WithMany("UsedTests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestModels.User", b =>
                {
                    b.Navigation("UsedTests");
                });
#pragma warning restore 612, 618
        }
    }
}
